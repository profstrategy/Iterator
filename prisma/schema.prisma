generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CAR_FOR_RENT {
  id           Int               @id @default(autoincrement())
  cohort       String
  main_image   String
  description  String
  package_type PACKAGE_TYPE
  price        Int
  created_at   DateTime          @default(now())
  updated_at   DateTime          @updatedAt
  images       String[]
  tier         PLAN
  rent_id      SingularPackage[] @relation("ActiveCarRelation")
}

model CAR_FOR_TOUR {
  id           Int               @id @default(autoincrement())
  cohort       String
  description  String
  main_image   String
  tier         PLAN
  package_type PACKAGE_TYPE
  price        Int
  created_at   DateTime          @default(now())
  updated_at   DateTime          @updatedAt
  images       String[]
  tour_id      SingularPackage[] @relation("ActiveSitRelation")
}

model SingularPackage {
  id            Int           @id @default(autoincrement())
  cohort        String
  main_image    String
  tier          PLAN 
  slug          String        @unique
  features      String[]
  payment       String
  active_sit_id Int?
  active_car_id Int?
  is_selected   Boolean
  package_type  PACKAGE_TYPE
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt
  rent_price    Int?
  tour_price    Int?
  description   String[]
  active_sit    ActiveSit?    @relation("ActiveSitRelation")
  active_car    CAR_FOR_RENT? @relation("ActiveCarRelation", fields: [active_car_id], references: [id])
  tour_id       CAR_FOR_TOUR? @relation("ActiveSitRelation", fields: [active_sit_id], references: [id])
}

model ActiveSit {
  id         Int             @id @default(autoincrement())
  value      String[]
  tourItemId SingularPackage @relation("ActiveSitRelation", fields: [id], references: [id])
}

enum PLAN {
  VIP
  REGULAR
  DELUXE
}

enum PACKAGE_TYPE {
  book_for_tour
  book_for_rent
}
